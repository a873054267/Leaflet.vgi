{"version":3,"sources":["webpack:///src/components/Nav/DrawLine/Line.vue","webpack:///src/components/Map/Map.vue","webpack:///./src/components/Nav/DrawLine/DrawTools.js","webpack:///./src/components/Map/Map.vue?8b57","webpack:///./src/components/Map/Map.vue","webpack:///./src/components/Nav/DrawLine/Line.vue?d66d","webpack:///./src/components/Nav/DrawLine/Line.vue","webpack:///src/components/Nav/Nav.vue","webpack:///./src/components/Nav/Nav.vue?d435","webpack:///./src/components/Nav/Nav.vue","webpack:///src/App.vue","webpack:///./src/App.vue?13ab","webpack:///./src/App.vue","webpack:///./src/main.js","webpack:///./src/components/Nav/DrawLine/DrawLine.js"],"names":["__webpack_exports__","props","open","type","Boolean","default","mounted","map","L","tdtMap","latLng1","latLng","latLng2","latLng3","latLng4","latLng5","latLng6","latLng7","latLng8","this","polyline","__WEBPACK_IMPORTED_MODULE_0__DrawLine__","PolyLine","latLngs","methods","beginDraw","$emit","self","drawNewLine","callback","name","init","TileLayer","TdtLayer","extend","getTileUrl","pt","x","y","z","center","zoom","worldCopyJump","minZoom","maxZoom","maxBounds","latLngBounds","attributionControl","zoomControl","doubleClickZoom","layer","addLayer","isOnLine","points","point","i","len","length","start","end","LineUtil","pointToSegmentDistance","getTrianglePoints","startPoint","endPoint","buffer","wd","midPoint","__WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_object_create___default","distanceY","distanceX","angle","Math","PI","atan","abs","bottomMiddle","cos","sin","top","right","left","isInBounds","movePoint","radius","Map_Map","render","_h","$createElement","_self","_c","attrs","id","staticRenderFns","__vue_styles__","ssrContext","__webpack_require__","components_Map_Map","normalizeComponent","Map","DrawLine_Line","staticClass","on","click","_v","Line___vue_styles__","Nav","components","DrawLine","Line_normalizeComponent","Line","data","Nav_Nav","App","Nav_normalizeComponent","show","initMap","selectortype_template_index_0_src_App","_e","src_App","App_normalizeComponent","vue_esm","config","productionTip","el","template","evtMgr","Evented","lastId","CONFIG","circleBuffer","lineBuffer","backStyle","fillColor","frontStyle","color","middle","link","animation","circle","beforeStyle","fillOpacity","afterStyle","defaultStyle","line","weight","opacity","triangle","pane","Util","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","__WEBPACK_IMPORTED_MODULE_2_babel_runtime_core_js_get_iterator___default","next","done","value","latLngToContainerPoint","push","err","return","Animation","twinkle","_this","fire","toggle","setAnimationBeforeStyle","intervalTimer","setInterval","setAnimationAfterStyle","hoverEventOff","once","cancelTwinkle","bind","attach","drawTriangles","clearInterval","setAnimationDefaultStyle","hoverEventRegister","triangles","remove","Shape","initialize","options","shapeFn","shapeCoors","back","front","initEventParent","clickEventRegister","eventRegister","getShapeType","twinkleBindFn","hover","out","off","CirclePair","setStyle","setRadius","cancelClickEvent","removeLayer","move","Circles","__WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_extends___default","stroke","bubblingMouseEvents","circleMarker","call","dragEventRegister","mouseDownFn","mouseDown","evt","initPoint","containerPoint","dragging","disable","bringToFront","params","mousemoveFn","mouseMove","mouseupFn","mouseUp","latlng","targetLine","closetLatLng","__WEBPACK_IMPORTED_MODULE_3__DrawTools__","sameCirclesToMerge","enable","existCircle","getCirclesInfo","circlesMerge","circleLineMerge","moveCircle","circles","find","targetCircle","lineId","setLatLng","style","Lines","stroke-linejoin","moveIndexes","initEvent","isLatLngInBuffer","insertLatLng","getMoveIndexes","lineMoveByLatLng","restoreMoveIndexes","args","_args$params","closetPoint","getClosetPoint","containerPointToLatLng","l","splice","forEach","index","m","moveIndex","redraw","includes","closestPointOnSegment","setLatLngs","addLatLng","concat","__WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_toConsumableArray___default","Triangles","redrawTrianglesBindFn","addTriangles","trianglePoints","topLatLng","rightLatLng","leftLatLng","polygon","triangleLayerGroup","layerGroup","LineCircles","isExistCircle","removeExistCircle","insertCircle","_args$params2","filter","idx","findIndex","_args$params3","getClosetLatLng","broadcastToLines","moveLatLng","isFinished","lastLatLng","drawCompleted","completeCommon","ball","resetEndPointStyle","Triangle","slice","drawOld","lineData","draw","drawLine","drawCircle","drawBall","LinePair","existCircles","getExistCircleByLatLng","getCircleType","isLinkNode","lines","autoMoveToLine","LinesSet","mapEventOff","LineCirclePair","lineCirclePair","mapClickFn","mapClick","mouseMoveFn","mapMouseMove","Class"],"mappings":"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","file":"static/js/main.acc89a4ac7c72534879b.js","sourcesContent":["<template>\n  <div class=\"d-item\" @click=\"beginDraw\">标线</div>\n</template>\n<script>\n  import Line from './DrawLine'\n\n  export default {\n    props:{\n      open:{\n        type:Boolean,\n        default:false\n      }\n    },\n    mounted () {\n      let map = L.tdtMap;\n      // 测试数据\n      let latLng1 = L.latLng(39.899994,116.359);\n      let latLng2 = L.latLng(39.898983,116.36043);\n      let latLng3 = L.latLng(39.90004,116.35799);\n      let latLng4 = L.latLng(39.90259,116.3514);\n\n      let latLng5 = L.latLng(39.905132, 116.349815);\n      let latLng6 = L.latLng(39.900948, 116.35805);\n      let latLng7 = L.latLng(39.90004, 116.35799);\n      let latLng8 = L.latLng(39.90447, 116.35134);\n      this.polyline = new Line.PolyLine(map, {\n        latLngs:[\n          [latLng1,latLng2,latLng3,latLng4],\n          [latLng5,latLng6,latLng7,latLng8]\n        ]\n      });\n    },\n    methods:{\n      beginDraw () {\n        // 处在绘制状态\n        if (this.open) {\n          return;\n        }\n        // 改变父组件open的状态为开放\n        this.$emit('beginDraw', true);\n        let self = this;\n        this.polyline.drawNewLine({\n          callback () {\n            self.$emit('beginDraw', false);\n          }\n        });\n      }\n    }\n  }\n</script>\n<style>\n  .d-item{\n    height: 46px;\n    line-height: 46px;\n  }\n</style>\n\n\n\n// WEBPACK FOOTER //\n// src/components/Nav/DrawLine/Line.vue","<template>\n  <div id=\"map\"></div>\n</template>\n\n<script>\n  import 'leaflet/dist/leaflet.css'\n  export default {\n    name: 'Map',\n    mounted () {\n      this.init();\n    },\n    methods: {\n      init: function () {\n        L.TileLayer.TdtLayer = L.TileLayer.extend({\n          getTileUrl (pt) {\n            let url = 'http://t0.tianditu.gov.cn/DataServer?T=img_w&x=' + pt.x + '&y=' + pt.y + '&l=' + pt.z;\n            return url;\n          }\n        });\n\n        let map = L.tdtMap = L.map('map', {\n          center:L.latLng(39.90, 116.36),\n          zoom:17,\n          worldCopyJump: true,\n          minZoom:1,\n          maxZoom:18,\n          maxBounds: L.latLngBounds(L.latLng(-90, -360), L.latLng(90, 360)),\n          attributionControl: false,\n          zoomControl:false,\n          doubleClickZoom:false,\n        });\n\n        let layer = new L.TileLayer.TdtLayer();\n        map.addLayer(layer);\n        this.$emit('initMap', map);\n      }\n    }\n  }\n</script>\n\n<style>\n  #map {\n    width: 100%;\n    height: 100%;\n  }\n</style>\n\n\n\n// WEBPACK FOOTER //\n// src/components/Map/Map.vue","// 绘图工具类\nexport default {\n  /**\n   * 判断点是否在线上\n   * @param latLngs\n   * @param latlng\n   * @return {boolean}\n   */\n  isOnLine (points, point) {\n    for (let i = 0, len = points.length; i < len; i++){\n      let start = points[i];\n      // 端点\n      if (start.x === point.x && start.y === point.y ) {\n        return true;\n      }\n      if(i + 1 === len) {\n        return false;\n      }\n      let end = points[i+1];\n      // 不在端点，在线上\n      let distance = L.LineUtil.pointToSegmentDistance(point, start, end);\n      if (distance <= 1) {\n        return true;\n      }\n    }\n    return false;\n  },\n  /**\n   * 根据线段的两个端点，绘制方向三角形，三角形的中心为线段的中间点\n   * 以开始点为坐标原点\n   * @param startPoint     开始端点经纬度\n   * @param endPoint       结束端点经纬度\n   * @return triangle     三角形三个顶点\n   */\n  getTrianglePoints (startPoint, endPoint, buffer) {\n    let wd = buffer - 2;\n    // 线段中间点的坐标\n    let midPoint = Object.create(null);\n    midPoint.x = (startPoint.x + endPoint.x)/2;\n    midPoint.y = (startPoint.y + endPoint.y)/2;\n    let distanceY = startPoint.y - endPoint.y;\n    let distanceX = endPoint.x - startPoint.x;\n\n    let angle;\n    // 90度的情况下\n    if (distanceX === 0) {\n      angle = Math.PI/2;\n    } else {\n      angle = Math.atan(Math.abs(distanceY)/Math.abs(distanceX));\n    }\n\n    // 象限转换，线段中间点转换到第一象限\n    midPoint.x = startPoint.x + Math.abs(startPoint.x - midPoint.x );\n    midPoint.y = startPoint.y - Math.abs(startPoint.y - midPoint.y );\n\n    // 三角形底部中间点的坐标\n    let bottomMiddle = Object.create(null);\n    bottomMiddle.x = midPoint.x - wd * Math.cos(angle);\n    bottomMiddle.y = midPoint.y + wd * Math.sin(angle);\n\n    // 默认是第一象限\n    // 三角形顶点坐标\n    let top = Object.create(null);\n    top.x = midPoint.x + wd * Math.cos(angle);\n    top.y = midPoint.y - wd * Math.sin(angle);\n\n    // 三角形底部右侧点坐标\n    let right = Object.create(null);\n    right.x = midPoint.x + wd * Math.sin(angle);\n    right.y = midPoint.y + wd * Math.cos(angle);\n\n    // 三角形底部左侧点坐标\n    let left = Object.create(null);\n    left.x = midPoint.x - wd * Math.sin(angle);\n    left.y = midPoint.y - wd * Math.cos(angle);\n\n    // 第二象限\n    if(distanceY >= 0 && distanceX < 0) {\n      top.x = startPoint.x - (top.x - startPoint.x);\n      right.x = startPoint.x - (right.x - startPoint.x);\n      left.x = startPoint.x - (left.x - startPoint.x);\n      // 第三象限\n    } else if(distanceY < 0 && distanceX <= 0){\n      top.x = startPoint.x - (top.x - startPoint.x);\n      top.y = startPoint.y + (startPoint.y - top.y);\n      right.x = startPoint.x - (right.x - startPoint.x);\n      right.y = startPoint.y + (startPoint.y - right.y);\n      left.x = startPoint.x - (left.x - startPoint.x);\n      left.y = startPoint.y + (startPoint.y - left.y);\n      // 第四象限\n    } else if(distanceY < 0 && distanceX > 0) {\n      top.y = startPoint.y + (startPoint.y - top.y);\n      right.y = startPoint.y + (startPoint.y - right.y);\n      left.y = startPoint.y + (startPoint.y - left.y);\n    }\n    return {\n      top,\n      right,\n      left\n    }\n  },\n  /**\n   * 判断点是否在某一个范围内\n   * @param movePoint\n   * @param center\n   * @param radius\n   */\n  isInBounds(movePoint, center, radius) {\n    // 鼠标位置在圆内不发生移动\n    if (movePoint.x >= center.x - radius && movePoint.x <= center.x + radius\n      && movePoint.y >= center.y - radius && movePoint.y <= center.y + radius) {\n      return true;\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/Nav/DrawLine/DrawTools.js","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{attrs:{\"id\":\"map\"}})}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-51b07248\",\"hasScoped\":false,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/components/Map/Map.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-51b07248\\\",\\\"scoped\\\":false,\\\"hasInlineConfig\\\":false}!../../../node_modules/vue-loader/lib/selector?type=styles&index=0!./Map.vue\")\n}\nvar normalizeComponent = require(\"!../../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./Map.vue\"\nimport __vue_script__ from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./Map.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-51b07248\\\",\\\"hasScoped\\\":false,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../node_modules/vue-loader/lib/selector?type=template&index=0!./Map.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/Map/Map.vue\n// module id = null\n// module chunks = ","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"d-item\",on:{\"click\":_vm.beginDraw}},[_vm._v(\"标线\")])}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-4be15da2\",\"hasScoped\":false,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/components/Nav/DrawLine/Line.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-4be15da2\\\",\\\"scoped\\\":false,\\\"hasInlineConfig\\\":false}!../../../../node_modules/vue-loader/lib/selector?type=styles&index=0!./Line.vue\")\n}\nvar normalizeComponent = require(\"!../../../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../../../node_modules/vue-loader/lib/selector?type=script&index=0!./Line.vue\"\nimport __vue_script__ from \"!!babel-loader!../../../../node_modules/vue-loader/lib/selector?type=script&index=0!./Line.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-4be15da2\\\",\\\"hasScoped\\\":false,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../../node_modules/vue-loader/lib/selector?type=template&index=0!./Line.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/Nav/DrawLine/Line.vue\n// module id = null\n// module chunks = ","<template>\n    <div class=\"drawNav\">\n      <DrawLine :open=\"open\" @beginDraw=\"beginDraw\"></DrawLine>\n    </div>\n</template>\n<script>\nimport DrawLine from './DrawLine/Line'\nexport default {\n    components:{\n        DrawLine,\n    },\n    data(){\n        return{\n          open:false\n        }\n    },\n    methods:{\n      beginDraw (open) {\n        this.open = open;\n      }\n    }\n}\n</script>\n<style lang='less'>\n    .drawNav{\n        position: absolute;\n        padding:10px 20px;\n        background: #fff;\n        box-shadow: 2px 2px 4px #cccccc;\n        z-index: 999;\n        font-size: 14px;\n        top: 20px;\n        left: 20px;\n        border-radius: 2px;\n        &:hover {\n          background: #f2f2f2;\n          cursor:pointer;\n        }\n    }\n</style>\n\n\n\n\n\n// WEBPACK FOOTER //\n// src/components/Nav/Nav.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"drawNav\"},[_c('DrawLine',{attrs:{\"open\":_vm.open},on:{\"beginDraw\":_vm.beginDraw}})],1)}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-1efff766\",\"hasScoped\":false,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/components/Nav/Nav.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-1efff766\\\",\\\"scoped\\\":false,\\\"hasInlineConfig\\\":false}!less-loader?{\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/selector?type=styles&index=0!./Nav.vue\")\n}\nvar normalizeComponent = require(\"!../../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./Nav.vue\"\nimport __vue_script__ from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./Nav.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-1efff766\\\",\\\"hasScoped\\\":false,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../node_modules/vue-loader/lib/selector?type=template&index=0!./Nav.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/Nav/Nav.vue\n// module id = null\n// module chunks = ","<template>\n  <div id=\"app\">\n    <Map @initMap=\"initMap\"/>\n    <Nav v-if=\"show\"/>\n  </div>\n</template>\n<script>\nimport Map from './components/Map/Map'\nimport Nav from './components/Nav/Nav'\n\nexport default {\n  name: 'App',\n  components: {\n    Map,\n    Nav\n  },\n  data () {\n    return {\n      show:false,\n    }\n  },\n  methods:{\n    initMap (map) {\n      this.show = true;\n    }\n  }\n}\n</script>\n\n<style lang=\"less\">\n  *{\n    padding:0px;\n    margin:0px;\n    box-sizing:border-box;\n    outline: none;\n  }\n\n  html, body, #app{\n    width: 100%;\n    height: 100%;\n    overflow:hidden;\n  }\n\n  #app {\n    font-family: 'Avenir', Helvetica, Arial, sans-serif;\n    -webkit-font-smoothing: antialiased;\n    -moz-osx-font-smoothing: grayscale;\n    position: relative;\n  }\n</style>\n\n\n\n// WEBPACK FOOTER //\n// src/App.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{attrs:{\"id\":\"app\"}},[_c('Map',{on:{\"initMap\":_vm.initMap}}),_vm._v(\" \"),(_vm.show)?_c('Nav'):_vm._e()],1)}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-3c36b7fe\",\"hasScoped\":false,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/App.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-3c36b7fe\\\",\\\"scoped\\\":false,\\\"hasInlineConfig\\\":false}!less-loader?{\\\"sourceMap\\\":true}!../node_modules/vue-loader/lib/selector?type=styles&index=0!./App.vue\")\n}\nvar normalizeComponent = require(\"!../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../node_modules/vue-loader/lib/selector?type=script&index=0!./App.vue\"\nimport __vue_script__ from \"!!babel-loader!../node_modules/vue-loader/lib/selector?type=script&index=0!./App.vue\"\n/* template */\nimport __vue_template__ from \"!!../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-3c36b7fe\\\",\\\"hasScoped\\\":false,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../node_modules/vue-loader/lib/selector?type=template&index=0!./App.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/App.vue\n// module id = null\n// module chunks = ","// The Vue build version to load with the `import` command\n// (runtime-only or standalone) has been set in webpack.base.conf with an alias.\nimport Vue from 'vue'\nimport App from './App'\n\nVue.config.productionTip = false\n\nnew Vue({\n  el: '#app',\n  components: { App },\n  template: '<App/>'\n})\n\n\n\n// WEBPACK FOOTER //\n// ./src/main.js","import DrawTools from './DrawTools'\n\n// 事件对象,处理自定义事件, 实现类之间的解耦\nlet evtMgr = new L.Evented();\n\n// map 对象\nlet map;\n// 唯一ID，用来标识图形\nlet lastId = 0;\n\n// 常用样式配置\nconst CONFIG = {\n  // 圆半径缓冲常量，用来判断某一点是否在另一个点的范围内\n  circleBuffer:14,\n  // 线宽度缓冲常量，用来判断某一点是否在线的缓冲区内\n  lineBuffer:9,\n  // 端点\n  end:{\n    backStyle:{\n      radius: 9,\n      fillColor: '#E20100',\n    },\n    frontStyle:{\n      radius: 6,\n      fillColor: '#FFFFFF',\n      color: '#3388ff',\n    }\n  },\n  // 中间节点\n  middle:{\n    backStyle:{\n      radius: 7,\n      fillColor: '#E20100',\n    },\n    frontStyle:{\n      radius: 4,\n      fillColor: '#FFFFFF',\n      color: '#3388ff',\n    }\n  },\n  // 连接点\n  link:{\n    backStyle:{\n      radius: 8\n    },\n    frontStyle:{\n      fillColor: '#fffd0c',\n      color: '#000000',\n      radius: 5\n    }\n  },\n  // 动画效果配置: beforeStyle->动画前的样式  afterStyle-> 动画后样式  defaultStyle-> 没有动画的默认样式\n  animation:{\n    circle:{\n      beforeStyle:{\n        radius: 10,\n        fillOpacity: 0.5\n      },\n      afterStyle:{\n        radius: 14,\n        fillOpacity: 0.8\n      },\n      defaultStyle:{\n        radius: 9,\n        fillOpacity: 0\n      }\n    },\n    line:{\n      beforeStyle:{\n        weight: 14,\n        opacity:0.5\n      },\n      afterStyle:{\n        weight: 19,\n        opacity: 0.8\n      },\n      defaultStyle:{\n        opacity: 0\n      }\n    }\n  },\n  // 三角形箭头样式\n  triangle:{\n    color: '#4e4e4e',\n    weight: 1,\n    fillColor: '#fff',\n    fillOpacity: 0.8,\n    pane: 'markerPane'\n  }\n}\n\n/**\n * 工具类\n * @type {{latLngsToPoints(*): *}}\n */\nlet Util = {\n  /**\n   * 经纬度数组转成像素数组\n   * @param latLngs\n   * @return {Array}\n   */\n  latLngsToPoints (latLngs) {\n    let points = [];\n    for (let latLng of latLngs) {\n      let point = map.latLngToContainerPoint(latLng);\n      points.push(point);\n    }\n    return points;\n  }\n}\n\n/**\n * 动画类\n * @type {{}}\n */\nlet Animation = {\n  /**\n   * 动画闪烁特效\n   */\n  twinkle (type) {\n    // 触发onceClick，取消上一次动画\n    map.fire('click');\n    this.toggle = false;\n    let self = this;\n    // 样式配置\n    this.setAnimationBeforeStyle ();\n    this.intervalTimer = setInterval(() => {\n      if(self.toggle){\n        this.setAnimationBeforeStyle ();\n      } else {\n        this.setAnimationAfterStyle();\n      }\n      self.toggle = !self.toggle;\n    }, 1000);\n    // 暂时清除悬浮事件\n    this.hoverEventOff();\n    // 点击地图，取消闪烁效果\n    map.once('click', this.cancelTwinkle.bind(this));\n    // 添加三角形\n    if (type == 'line')\n      this.attach.drawTriangles();\n  },\n  /**\n   * 取消闪烁\n   */\n  cancelTwinkle () {\n    if (!this.intervalTimer){\n      return;\n    }\n    // 清除定时器\n    clearInterval(this.intervalTimer);\n    this.intervalTimer = null;\n    // 设置成默认样式\n    this.setAnimationDefaultStyle();\n    // 恢复悬浮事件\n    this.hoverEventRegister();\n    // 移除三角形\n    this.attach.triangles.remove();\n  }\n}\n\n/**\n * 图形类：圆组合和线组合\n */\nlet Shape = {\n  initialize (options) {\n    // 每个图形赋予一个唯一ID\n    this.id = ++lastId;\n    // 背景样式\n    L.extend(this.backStyle, options.backStyle);\n    // 前景样式\n    L.extend(this.frontStyle, options.frontStyle);\n    // 构造图形的函数\n    let shapeFn = options.shapeFn;\n    // 图形坐标\n    let shapeCoors = options.shapeCoors;\n    // 背景图形\n    this.back = shapeFn(shapeCoors, this.backStyle);\n    map.addLayer(this.back);\n    // 前景图形\n    this.front = shapeFn(shapeCoors, this.frontStyle);\n    map.addLayer(this.front);\n    // 图形所依附的编辑线实例，根据该实例可以找到线和圆数组\n    this.attach = options.attach;\n    // 事件监听\n    this.initEventParent();\n  },\n  /**\n   * 自定义事件监听\n   */\n  initEventParent () {\n    // 恢复图形点击事件监听\n    evtMgr.on('on-restoreClickEvent', this.clickEventRegister.bind(this));\n  },\n  /**\n   * 图形事件，点击，悬浮\n   */\n  eventRegister () {\n    this.clickEventRegister ();\n    this.hoverEventRegister ();\n  },\n  /**\n   * 事件注册\n   */\n  clickEventRegister () {\n    let type = this.getShapeType ();\n    this.twinkleBindFn = this.twinkle.bind(this, type);\n    this.back.on('click', this.twinkleBindFn);\n    this.front.on('click', this.twinkleBindFn);\n  },\n  /**\n   * 悬浮高亮事件\n   */\n  hoverEventRegister () {\n    let self = this;\n    this.back.on('mouseover', () => {\n      self.hover();\n    }).on('mouseout', () => {\n      self.out();\n    });\n    this.front.on('mouseover', () => {\n      self.hover();\n    }).on('mouseout', () => {\n      self.out();\n    });\n  },\n  /**\n   * 取消鼠标滑过事件\n   */\n  hoverEventOff () {\n    this.back.off('mouseover').off('mouseout');\n    this.front.off('mouseover').off('mouseout');\n  },\n  /**\n   * 获取图形类型\n   */\n  getShapeType () {\n    let type = 'line';\n    if (this instanceof CirclePair){\n      type = 'circle';\n    }\n    return type;\n  },\n  /**\n   * 设置动画前样式\n   */\n  setAnimationBeforeStyle () {\n    let type = this.getShapeType ();\n    // 样式配置\n    let style = CONFIG.animation[type];\n    let {beforeStyle} = style;\n    // 设置动画闪烁后的样式\n    this.back.setStyle(beforeStyle);\n    if (type == 'circle')\n      this.back.setRadius(beforeStyle.radius);\n  },\n  /**\n   * 设置动画后样式\n   */\n  setAnimationAfterStyle () {\n    let type = this.getShapeType ();\n    // 样式配置\n    let style = CONFIG.animation[type];\n    let {afterStyle} = style;\n    // 设置动画闪烁后的样式\n    this.back.setStyle(afterStyle);\n    if (type == 'circle')\n      this.back.setRadius(afterStyle.radius);\n  },\n  /**\n   * 恢复样式\n   */\n  setAnimationDefaultStyle () {\n    let type = this.getShapeType ();\n    // 样式配置\n    let style = CONFIG.animation[type];\n    let {defaultStyle} = style;\n    // 设置动画闪烁后的样式\n    this.back.setStyle(defaultStyle);\n    if (type == 'circle')\n      this.back.setRadius(defaultStyle.radius);\n  },\n  /**\n   * 事件取消\n   */\n  cancelClickEvent () {\n    this.back.off('click');\n    this.front.off('click');\n  },\n  /**\n   * 图形移除\n   */\n  remove () {\n    this.attach = null;\n    map.removeLayer(this.back);\n    map.removeLayer(this.front);\n  },\n  /**\n   * 图形移动,子类实现\n   */\n  move () {},\n  /**\n   * 图形设置样式，子类实现\n   */\n  setStyle () {},\n};\n\n/**\n * 圆类\n *由前景圆和背景圆组成，前景圆负责展示，背景圆负责动画特效\n */\nlet Circles = {\n  // 背景圆样式\n  backStyle:{\n    ...CONFIG.end.backStyle,\n    stroke: false,\n    fillOpacity: 0,\n    bubblingMouseEvents:false\n  },\n  // 前景圆样式\n  frontStyle:{\n    ...CONFIG.end.frontStyle,\n    fillOpacity: 1,\n    weight: 1,\n    bubblingMouseEvents:false\n  },\n  /**\n   * 初始化，创建大圆和小圆图形\n   * @param options\n   */\n  initialize (options) {\n    // 圆的位置：经纬度\n    this.latLng = options.latLng;\n    // 圆类型：端点->end，中间节点->middle，连接点->link\n    this.type = options.type;\n    // 图形构造函数\n    options.shapeFn =  L.circleMarker;\n    // 图形坐标\n    options.shapeCoors =  this.latLng;\n    // 调用父类的构造函数\n    Shape.initialize.call(this, options);\n  },\n  /**\n   * 事件监听\n   */\n  eventRegister () {\n    Shape.eventRegister.call(this);\n    this.dragEventRegister();\n  },\n  /**\n   * 拖拽事件监听\n   */\n  dragEventRegister () {\n    this.mouseDownFn = this.mouseDown.bind(this);\n    this.back.on('mousedown', this.mouseDownFn);\n    this.front.on('mousedown', this.mouseDownFn);\n  },\n  /**\n   * 鼠标按下，开始拖拽\n   */\n  mouseDown (evt) {\n    // 存储初始位置\n    this.initPoint = evt.containerPoint;\n    map.dragging.disable();\n    map.fire('click');\n    let latLng = this.latLng;\n    // 移动点图层移至最上层，防止被其他图层压盖\n    this.front.bringToFront();\n    // 通知所有需要移动的线记录当前经纬度所对应的索引\n    evtMgr.fire('on-getMoveIndexes', {\n      params:{\n        latLng\n      }\n    });\n    this.mousemoveFn = this.mouseMove.bind(this);\n    map.on('mousemove', this.mousemoveFn);\n    this.mouseupFn = this.mouseUp.bind(this);\n    map.on('mouseup', this.mouseupFn);\n  },\n  /**\n   * 鼠标拖拽移动中\n   */\n  mouseMove (evt) {\n    let latLng = evt.latlng;\n    let self = this;\n    // 目标线\n    this.targetLine = null;\n    // 是否在线的缓冲区内\n    evtMgr.fire('on-isLatLngInBuffer', {\n      params:{\n        latLng,\n        callback: (closetLatLng, line) => {\n          latLng = closetLatLng;\n          self.targetLine = line;\n        }\n      }\n    });\n    // 移动距离过小不发生移动\n    let movePoint = map.latLngToContainerPoint(latLng);\n    let inBounds = DrawTools.isInBounds(movePoint, this.initPoint, CONFIG.circleBuffer);\n    if (inBounds){\n      return;\n    }\n    // 移动圆\n    this.move(latLng);\n    // 移动所有关联线\n    evtMgr.fire('on-lineMoveByLatLng', {\n      params:{\n        latLng\n      }\n    });\n  },\n  /**\n   * 鼠标拖拽停止\n   */\n  mouseUp () {\n    map.off('mousemove', this.mousemoveFn);\n    map.off('mouseup', this.mouseupFn);\n    // 所有移动线的索引数组归为初始值[]\n    evtMgr.fire('on-restoreMoveIndexes');\n    // 对已存在的圆需要融合成一个圆\n    this.sameCirclesToMerge();\n    // 恢复地图拖动事件\n    map.dragging.enable();\n  },\n  /**\n   * 同一位置的圆需要合并为一个\n   */\n  sameCirclesToMerge () {\n    let moveCircle = this, type;\n    let existCircle = this.getCirclesInfo(moveCircle);\n    // 其他位置存在圆\n    if (existCircle){\n      // 目标圆跟当前移动的圆是同一条线，将移动圆和已存在的圆删除，重新绘制圆，防止压盖\n      this.circlesMerge(moveCircle, existCircle, 'link');\n    } else if (this.targetLine){\n      this.circleLineMerge (moveCircle);\n    }\n  },\n  /**\n   * 获取目标圆\n   * @param moveCircle\n   * @return {{existCircle: *, existLine: *, moveLine: *}}\n   */\n  getCirclesInfo (moveCircle) {\n    let latLng = moveCircle.latLng;\n    let existCircle;\n    evtMgr.fire('on-isExistCircle', {\n      params:{\n        latLng,\n        callback (circles) {\n          if(!existCircle){\n            // 对目标圆和与之对应的线进行存储\n            existCircle = circles.find( circle => {\n              return moveCircle.id != circle.id;\n            });\n          }\n        }\n      }\n    });\n    return existCircle;\n  },\n  /**\n   * 两个圆相遇之后进行合并\n   * @param moveCircle\n   * @param targetCircle\n   * @param type\n   * @return {*}\n   */\n  circlesMerge (moveCircle, targetCircle, type) {\n    let latLng = moveCircle.latLng;\n    let lineId = targetCircle.attach.line.id;\n    // 删除移动线上的圆\n    evtMgr.fire('on-removeExistCircle',{\n      params:{\n        circle:moveCircle\n      }\n    });\n    // 删除目标线的圆\n    evtMgr.fire('on-removeExistCircle',{\n      params:{\n        circle:targetCircle\n      }\n    });\n    // 创建新圆\n    evtMgr.fire(\"on-insertCircle\", {\n      params:{\n        type,\n        latLng,\n        lineId\n      }\n    });\n  },\n  /**\n   * 圆落在了线上\n   * @param moveCircle\n   */\n  circleLineMerge (moveCircle) {\n    // 移动中的点落在了线上\n    let latLng = moveCircle.latLng,\n        type = '';\n    let lineId = this.targetLine.id;\n    let moveLineId = moveCircle.attach.line.id;\n    // 圆的类型\n    if (lineId === moveLineId) {\n      type = 'middle';\n    } else {\n      type = 'link';\n    }\n    // 移除已有的圆\n    evtMgr.fire('on-removeExistCircle',{\n      params:{\n        circle:moveCircle\n      }\n    });\n    // 插入经纬度，新建圆\n    evtMgr.fire(\"on-insertLatLng\", {\n      params:{\n        latLng\n      }\n    });\n    // 新建圆\n    evtMgr.fire(\"on-insertCircle\", {\n      params:{\n        type,\n        latLng,\n        lineId\n      }\n    });\n  },\n  /**\n   * 大圆和小圆同时移动\n   * @param latLng\n   */\n  move (latLng) {\n    this.back.setLatLng(latLng);\n    this.front.setLatLng(latLng);\n    this.latLng = latLng;\n  },\n  setStyle (style) {\n    let {backStyle, frontStyle} = style;\n    this.back.setStyle(backStyle);\n    this.front.setStyle(frontStyle);\n    this.back.setRadius(backStyle.radius);\n    this.front.setRadius(frontStyle.radius);\n  },\n  /**\n   * 悬浮\n   */\n  hover () {\n    let style = CONFIG.animation.circle.afterStyle;\n    this.back.setStyle(style);\n    this.back.setRadius(style.radius);\n  },\n  /**\n   * 取消悬浮\n   */\n  out () {\n    let style = CONFIG.animation.circle.defaultStyle;\n    this.back.setStyle(style);\n    this.back.setRadius(style.radius);\n  },\n  /**\n   * 移除当前圆\n   */\n  remove () {\n    // 经纬度为空\n    this.latLng = null;\n    // 调用父类的移除函数\n    Shape.remove.call(this);\n  }\n}\n\n/**\n * 线类\n * 由前景圆和背景圆组成，前景圆负责展示，背景圆负责动画特效\n */\nlet Lines = {\n  // 背景线样式\n  backStyle:{\n    weight: 14,\n    color: '#e2200b',\n    opacity: 0,\n    'stroke-linejoin': 'round',\n    bubblingMouseEvents: false\n  },\n  // 前景线样式\n  frontStyle:{\n    weight: 3,\n    color: '#ffffff',\n    opacity: 1,\n    bubblingMouseEvents: false\n  },\n  /**\n   * 初始化，创建图形\n   * @param options\n   */\n  initialize (options) {\n    // 线的经纬度\n    this.latLngs = options.latLngs;\n    // 记录线被拖拽移动的点\n    this.moveIndexes = [];\n    // 图形构造函数\n    options.shapeFn =  L.polyline;\n    // 图形坐标\n    options.shapeCoors =  this.latLngs;\n    // 调用父类的构造函数\n    Shape.initialize.call(this, options);\n    // 初始化自定义事件\n    this.initEvent();\n  },\n  /**\n   * 初始事件\n   */\n  initEvent() {\n    // 判断所给经纬度是否在缓冲区内,如果在，返回离该经纬度最近的线上的点\n    evtMgr.on('on-isLatLngInBuffer', this.isLatLngInBuffer.bind(this));\n    // 线动态插入经纬度\n    evtMgr.on(\"on-insertLatLng\", this.insertLatLng.bind(this));\n    // 线上需要移动的经纬度所在的索引记录\n    evtMgr.on(\"on-getMoveIndexes\", this.getMoveIndexes.bind(this));\n    // 线随着经纬度变化移动\n    evtMgr.on('on-lineMoveByLatLng', this.lineMoveByLatLng.bind(this));\n    // 索引数组恢复成默认值\n    evtMgr.on('on-restoreMoveIndexes', this.restoreMoveIndexes.bind(this));\n  },\n  /**\n   * 返回离所给经纬度最近的线上的点\n   */\n  isLatLngInBuffer (args) {\n    let {latLng, callback} = args.params;\n    let closetPoint = this.getClosetPoint(latLng);\n    if (closetPoint) {\n      let closetLatLng = map.containerPointToLatLng(closetPoint);\n      callback(closetLatLng, this);\n    }\n  },\n  /**\n   * 线上插入经纬度\n   * @param args\n   */\n  insertLatLng (args) {\n    let {latLng} = args.params;\n    let latLngs = this.latLngs;\n    let point =  map.latLngToContainerPoint(latLng);\n    for (let l = 0, len = latLngs.length; l < len; l++){\n      let next = l + 1;\n      if (next < len) {\n        let start =  map.latLngToContainerPoint(latLngs[l]);\n        let end =  map.latLngToContainerPoint(latLngs[next]);\n        // 排除端点的情况\n        if ((point.x === start.x && point.y === start.y)\n          || (point.x === end.x && point.y === end.y)){\n          continue;\n        }\n        // 线段上的情况\n        let distance = L.LineUtil.pointToSegmentDistance(point, start, end);\n        if (distance < 1){\n          latLngs.splice(next, 0, latLng);\n          return true;\n        }\n      }\n    }\n  },\n  /**\n   * 线上需要移动的经纬度所在的索引记录\n   * @param args\n   */\n  getMoveIndexes (args) {\n    let {latLng} = args.params;\n    this.moveIndexes = [];\n    let movePoint = map.latLngToContainerPoint(latLng);\n    let self = this;\n    this.latLngs.forEach((value, index) => {\n      let center = map.latLngToContainerPoint(value);\n      if(DrawTools.isInBounds(movePoint, center, CONFIG.circleBuffer)){\n        self.moveIndexes.push(index);\n      }\n    });\n  },\n  /**\n   * 依靠经纬度移动线\n   * @param args\n   */\n  lineMoveByLatLng (args) {\n    let {latLng} = args.params;\n    if (this.moveIndexes.length === 0){\n      return;\n    }\n    // 多个线段连接在同一点\n    for (let m in this.moveIndexes){\n      let moveIndex = this.moveIndexes[m];\n      this.latLngs[moveIndex] = latLng;\n    }\n\n    // 重绘\n    this.redraw (this.latLngs);\n  },\n  /**\n   * 移动索引数组恢复成默认\n   */\n  restoreMoveIndexes () {\n    this.moveIndexes = [];\n  },\n  /**\n   *获取离当前点最近的线上的点或者线上的端点\n   * @param latLng\n   */\n  getClosetPoint (latLng) {\n    // 判断点是否在线的缓冲区\n    let point = map.latLngToContainerPoint(latLng);\n    let points = Util.latLngsToPoints(this.latLngs);\n    let len = points.length, closetPoint;\n    for(let l = 0; l < len; l++) {\n      let start = points[l];\n      // 当前移动点除外\n      if (!this.moveIndexes.includes(l)) {\n        // 如果在端点的缓冲区内\n        if(DrawTools.isInBounds(point, start, CONFIG.circleBuffer)){\n          closetPoint = start;\n          break;\n        }\n      }\n\n      if (l + 1 === len) {\n        break;\n      }\n\n      // 当前点以及与之相连的线段除外\n      if (this.moveIndexes.includes(l) || this.moveIndexes.includes(l+1)){\n        continue;\n      }\n\n      let end = points[l+1];\n\n      let distance = L.LineUtil.pointToSegmentDistance(point, start, end);\n      if (distance <= CONFIG.lineBuffer){\n        closetPoint = L.LineUtil.closestPointOnSegment(point, start, end);\n        break;\n      }\n    }\n    return closetPoint;\n  },\n  /**\n   * 线重绘\n   * @param latLngs\n   */\n  redraw (latLngs) {\n    this.back.setLatLngs(latLngs);\n    this.front.setLatLngs(latLngs);\n    this.latLngs = latLngs;\n  },\n  /**\n   * 线动态的添加点\n   * @param latLng\n   */\n  addLatLng (latLng) {\n    this.redraw([...this.latLngs, latLng]);\n  },\n  /**\n   * 背景线和前景线同时移动\n   * @param latLng\n   */\n  move (latLng) {\n    this.back.setLatLngs([...this.latLngs, latLng]);\n    this.front.setLatLngs([...this.latLngs, latLng]);\n  },\n  /**\n   * 悬浮效果\n   */\n  hover () {\n    this.back.setStyle(CONFIG.animation.line.beforeStyle);\n  },\n  /**\n   * 取消悬浮\n   */\n  out () {\n    this.back.setStyle(CONFIG.animation.line.defaultStyle);\n  },\n  /**\n   * 移除当前线\n   */\n  remove () {\n    // 经纬度为空\n    this.latLngs = [];\n    //调用父类的移除函数\n    Shape.remove.call(this);\n  }\n}\n\n/**\n * 三角形箭头类\n * @type {{}}\n */\nlet Triangles = {\n  initialize (latLngs) {\n    this.latLngs = latLngs;\n    // 利用绑定传递参数，同时也方便后期移除该事件\n    this.redrawTrianglesBindFn = this.redraw.bind(this);\n    // 地图级别变化，需要重绘箭头\n    map.on('zoomend', this.redrawTrianglesBindFn);\n  },\n  /**\n   * 地图级别变化，线上的三角形需要重绘\n   */\n  redraw (latLngs) {\n    if (latLngs)\n      this.latLngs = latLngs;\n    this.remove();\n    this.addTriangles();\n  },\n  /**\n   * 线上叠加三角形\n   */\n  addTriangles () {\n    let start, end, triangles = [];\n    // 添加三角形箭头\n    let latLngs = this.latLngs;\n    let points = Util.latLngsToPoints(latLngs);\n    for (let l = 0; l < points.length; l++) {\n      start = points[l];\n      if (l != points.length - 1) {\n        end = points[l + 1];\n        let trianglePoints = DrawTools.getTrianglePoints(start, end, CONFIG.lineBuffer);\n        let {top, right, left} = trianglePoints;\n        // 坐标转成经纬度绘制多边形\n        let topLatLng = map.containerPointToLatLng(top);\n        let rightLatLng = map.containerPointToLatLng(right);\n        let leftLatLng = map.containerPointToLatLng(left);\n        let triangle = L.polygon([topLatLng, rightLatLng, leftLatLng], CONFIG.triangle);\n        triangles.push(triangle);\n      }\n    }\n    this.triangleLayerGroup = L.layerGroup(triangles);\n    map.addLayer(this.triangleLayerGroup);\n  },\n  /**\n   * 删除三角形\n   */\n  remove () {\n    if (this.triangleLayerGroup) {\n      map.removeLayer(this.triangleLayerGroup);\n      this.triangleLayerGroup = null;\n    }\n    // 取消地图缩放事件\n    map.off('zoomend', this.redrawTrianglesBindFn);\n  }\n}\n\n/**\n * 线圆的组合类\n * 由圆和线组成，圆代表节点，线代表路径\n */\nlet LineCircles = {\n  /**\n   * 线圆的构造函数\n   * @param options\n   */\n  initialize (options){\n    // 线实例\n    this.line = null;\n    // 圆实例数组\n    this.circles = [];\n    // 三角形实例\n    this.triangles = null;\n    // 自定义事件监听\n    this.initEvent ();\n  },\n  /**\n   * 事件初始化\n   */\n  initEvent () {\n    // 取消图形的点击事件\n    evtMgr.on('on-cancelClickEvent', this.cancelClickEvent.bind(this));\n    // 监听当前位置是否已经叠加过圆\n    evtMgr.on('on-isExistCircle', this.isExistCircle.bind(this));\n    // 监听移除当前位置圆的事件\n    evtMgr.on('on-removeExistCircle', this.removeExistCircle.bind(this));\n    // 插入新圆\n    evtMgr.on(\"on-insertCircle\", this.insertCircle.bind(this));\n  },\n  /**\n   * 取消图形的点击事件\n   */\n  cancelClickEvent () {\n    // 线点击事件取消\n    if (this.line){\n      this.line.cancelClickEvent();\n    }\n    // 圆点击事件取消\n    this.circles.forEach(circle => {\n      circle.cancelClickEvent();\n    });\n  },\n  /**\n   * 是否当前绘制位置已经存在圆节点,本身点除外\n   * @param args\n   */\n  isExistCircle (args) {\n    let {latLng, callback} = args.params;\n    let circles = this.circles.filter(value => {\n      let center = map.latLngToContainerPoint(value.latLng);\n      let movePoint = map.latLngToContainerPoint(latLng);\n      return DrawTools.isInBounds(movePoint, center, CONFIG.circleBuffer);\n    });\n    callback(circles);\n  },\n  /**\n   * 移除旧圆\n   * @param args\n   */\n  removeExistCircle (args) {\n    let {circle} = args.params;\n    let circles = this.circles;\n    let idx = circles.findIndex(value => {\n      return circle.id == value.id;\n    });\n    if(idx > -1) {\n      circles.splice(idx, 1);\n      circle.remove();\n    }\n  },\n  /**\n   * 新建新圆\n   * @param args\n   */\n  insertCircle (args) {\n    let {latLng, type, lineId} = args.params;\n    if (this.line.id != lineId) {\n      return;\n    }\n    let circle = new CirclePair({attach:this, type, latLng, ...CONFIG[type]});\n    circle.eventRegister();\n    this.circles.push(circle);\n  },\n  /**\n   * 返回离所给经纬度最近的线上的点\n   * @param latLng\n   * @return {*}\n   */\n  getClosetLatLng (latLng) {\n    this.broadcastToLines (latLng, (moveLatLng) => {\n      latLng = moveLatLng;\n    });\n    return latLng;\n  },\n  /**\n   * 根据当前点击位置是否跟最后一次点击的位置重复，判断是否完成了绘制\n   * @param latLng\n   */\n  isFinished (latLng) {\n    if (!this.line){\n      return false;\n    }\n    let latLngs = this.line.latLngs;\n    // 当前编辑线的最后一个点\n    let lastLatLng = latLngs[latLngs.length - 1];\n    // 当前点击的位置是最后一个点，完成此次线的编辑\n    let center = map.latLngToContainerPoint(lastLatLng);\n    let point = map.latLngToContainerPoint(latLng);\n    if (DrawTools.isInBounds(point, center, CONFIG.circleBuffer)){\n      return true;\n    }\n    return false;\n  },\n  /**\n   * 绘制完成\n   */\n  drawCompleted () {\n    // 1、绘制完成，事件注销\n    evtMgr.fire('on-drawComplete');\n    // 2、事件监听端点样式设置\n    this.completeCommon();\n    // 3、绘制三角形\n    this.drawTriangles();\n    // 4、线动画闪烁\n    this.line.twinkle('line');\n  },\n  /**\n   * 新编辑的线和已有数据的线，绘制完成都需要调用的函数\n   */\n  completeCommon() {\n    // 1、删除随鼠标移动的球\n    this.ball.remove();\n    this.ball = null;\n    // 2、设置最后端点的样式\n    this.resetEndPointStyle();\n    // 3、圆事件(点击，悬浮)注册\n    this.circles.forEach(circle => circle.eventRegister ());\n    // 4、线事件(点击)注册\n    this.line.eventRegister ();\n    // 5、线点击事件监听\n    evtMgr.fire('on-restoreClickEvent');\n  },\n  /**\n   * 绘制三角形\n   */\n  drawTriangles() {\n    if (!this.triangles){\n      this.triangles = new Triangle(this.line.latLngs);\n    }\n    this.triangles.redraw(this.line.latLngs);\n  },\n  /**\n   * 重新设置结束端点样式\n   */\n  resetEndPointStyle () {\n    let len = this.circles.length;\n    let circle = this.circles[len - 1];\n    if (circle.type != 'middle') {\n      return;\n    }\n    let frontStyle = {}, backStyle = {};\n    let latLngs = this.line.latLngs;\n    let points = Util.latLngsToPoints(latLngs);\n    let point = map.latLngToContainerPoint(circle.latLng);\n    // 是结束端点 [1,2,3,4,5]  5不在1，2，3，4所组成的线上\n    if (len <= 2\n      || !DrawTools.isOnLine(points.slice(0, len - 1), point)) {\n      // 重置结束点为端点\n      circle.type = 'end';\n    }\n    // 样式设置\n    circle.setStyle(CONFIG[circle.type]);\n  },\n  /**\n   * 根据数据进行绘制\n   * @param lineData\n   */\n  drawOld (lineData) {\n    // 绘制线\n    for (let l in lineData) {\n      this.draw (lineData[l]);\n    }\n    // 绘制完成,样式设置，事件监听\n    this.completeCommon();\n  },\n  /**\n   * 绘制线\n   * @param latLng\n   */\n  draw (latLng) {\n    // 线不存在说明当前标的点是开始点，再判断开始点是否在其他线的缓冲区内，如果在，开始点自动移动到线上\n    if (!this.line) {\n      latLng = this.getClosetLatLng (latLng);\n    }\n    // 是否完成此次编辑\n    if (this.isFinished(latLng)){\n      // 绘制完成，处理注销，清除工作\n      this.drawCompleted();\n      return;\n    }\n    // 绘制线\n    this.drawLine(latLng);\n    // 绘制圆\n    this.drawCircle(latLng);\n    // 绘制随鼠标移动的圆\n    this.drawBall (latLng);\n  },\n  /**\n   * 绘制线\n   * @param latLng\n   */\n  drawLine (latLng) {\n    // 绘制线\n    if (!this.line) {\n      this.line = new LinePair({latLngs:[latLng], attach:this});\n    } else {\n      this.line.addLatLng (latLng);\n    }\n  },\n  /**\n   * 绘制圆\n   * @param latLng\n   */\n  drawCircle (latLng) {\n    // 圆对象\n    let existCircle = null;\n    // 圆类型：link->连接点, middle->中间点, end->端点\n    let type = '';\n    // 当前位置存在的圆数组\n    let existCircles = this.getExistCircleByLatLng (latLng);\n    // 当前位置已经存在圆了\n    if (existCircles.length > 0) {\n      // TODO:取第一个已经存在的圆\n      existCircle = existCircles[0];\n      let index = this.circles.findIndex(value => {\n        return value.id == existCircle.id;\n      });\n      // 当前线上的圆,不绘制新圆\n      if (index > -1) {\n        existCircle.type = 'middle';\n        existCircle.setStyle(CONFIG.middle);\n        return;\n      } else {\n        // 其他线上的圆\n        type = 'link';\n        latLng = existCircle.latLng;\n        // 移除其他线上已存在的圆，重新创建新圆，否则会出现线压盖已存在圆的情况\n        evtMgr.fire('on-removeExistCircle', {\n          params: {\n            circle: existCircle\n          }\n        });\n      }\n    } else {\n      // 创建新圆\n      // 获取圆的类型\n      type = this.getCircleType (latLng);\n      // 如果连接点是在已存在的线上而不是端点，需要将该点添加到已存在的线上\n      if (type === 'link') {\n        let self = this;\n        evtMgr.fire(\"on-insertLatLng\", {\n          params:{\n            latLng\n          }\n        });\n      }\n    }\n    // 创建新圆\n    let circle = new CirclePair({attach:this, type, latLng, ...CONFIG[type]});\n    this.circles.push(circle);\n  },\n  /**\n   * 绘制随鼠标移动的球\n   * @param latLng\n   */\n  drawBall (latLng) {\n    // 绘制随鼠标移动的圆\n    if (!this.ball){\n      this.ball = new CirclePair({type:'end', latLng});\n    }\n  },\n  /**\n   * 根据经纬度获取所对应的圆\n   * @param latLng\n   */\n  getExistCircleByLatLng (latLng) {\n    let existCircles = [];\n    // 判断该点是否已经存在圆了，如果存在，判断该圆的类型，根据圆的类型更改样式\n    evtMgr.fire('on-isExistCircle', {\n      params:{\n        latLng,\n        callback (circles) {\n          existCircles = existCircles.concat(circles);\n        }\n      }\n    });\n    return existCircles;\n  },\n  /**\n   * 获取圆的样式\n   * @param latLng\n   * @return {{backStyle, frontStyle}}\n   */\n  getCircleType (latLng) {\n    let isLinkNode = false,  // 是否是连接点\n      type = 'end',           // 圆的类型\n      self = this;\n    // 判断该点是否是与其他线的连接点\n    this.broadcastToLines(latLng, (latLng, lines)=>{\n      // 已经是连接点，避免多次回掉\n      if (isLinkNode){\n        return;\n      }\n      // 该点连接多条线\n      if (lines.length > 1){\n        isLinkNode = true;\n      }\n    });\n\n    // 开始端点\n    if(this.circles.length === 0){\n      type = 'end';\n    } else if (isLinkNode) {\n      // 连接点\n      type = 'link';\n    } else {\n      // 中间点\n      type = 'middle';\n    }\n    return type;\n  },\n  /**\n   * 广播给所有的线，只要当前位置在线的缓冲区内\n   * @param latLng\n   * @param callback\n   */\n  broadcastToLines (latLng, callback) {\n    let self = this, lines = [];\n    // 广播给所有的线，判断当前位置是否在线的缓冲区内，如果在，自动移到该线上\n    evtMgr.fire('on-isLatLngInBuffer', {\n      params:{\n        latLng,\n        callback (closetLatLng, line) {\n          if (closetLatLng){\n            latLng = closetLatLng;\n          }\n          lines.push(line);\n        }\n      }\n    });\n    callback(latLng, lines);\n  },\n  /**\n   * 根据缓冲区自动移动到线上\n   * @param latLng\n   */\n  autoMoveToLine (latLng) {\n    let self = this;\n    this.broadcastToLines(latLng, (latLng)=>{\n      self.line.move(latLng);\n      self.ball.move(latLng);\n    });\n  }\n}\n\n// 标线的集合类\n// options={\n//     latLngs:  批量绘制\n//     circleClick: 圆点击事件\n//     lineClick:   线点击事件\n// }\n//  API={\n//    draw：根据经纬度绘制\n//    drawNewLine: params={ callback: 绘制完毕之后的回调函数 }\n//}\nlet LinesSet = {\n  /**\n   * 线集合类\n   * @param tdtMap 地图对象\n   * @param options 可选参数，初始化展示已由线数据时有用\n   */\n  initialize (tdtMap, options) {\n    let self = this;\n    map = tdtMap;\n    // 绘制已有的线\n    let latLngs = options.latLngs || [];\n    latLngs.forEach(lineData => {\n      self.draw(lineData);\n    });\n    // 初始化事件\n    this.initEvent();\n  },\n  /**\n   * 自定义事件监听函数集\n   */\n  initEvent () {\n    let self = this;\n    // 绘制完成事件监听\n    evtMgr.on('on-drawComplete', ()=>{\n      self.mapEventOff ();\n      if (self.callback) {\n        self.callback();\n      }\n    });\n  },\n  /**\n   * 依靠经纬度数组绘制线\n   * @param lineData\n   */\n  draw (lineData) {\n    if (!lineData || lineData.length == 0 ){\n      return;\n    }\n    // 叠加已有的线\n    let lineCirclePair = new LineCirclePair();\n    lineCirclePair.drawOld(lineData);\n  },\n  /**\n   * 从头开始，绘制新线\n   */\n  drawNewLine (options) {\n    this.callback = options.callback;\n    // 暂时取消所有图形的点击事件，绘制完成再恢复\n    evtMgr.fire('on-cancelClickEvent');\n    // 新编辑线实例\n    let lineCirclePair = new LineCirclePair();\n    // 注册地图点击事件\n    this.mapClickFn = this.mapClick.bind(this, lineCirclePair);\n    this.mouseMoveFn = null;\n    map.on('click', this.mapClickFn, this);\n  },\n  /**\n   * 地图点击事件，开始绘制线\n   * @param lineCirclePair\n   */\n  mapClick (lineCirclePair, evt) {\n    let latLng = evt.latlng;\n    // 经纬度以随鼠标移动的圆点为基准，因为圆点进入线的缓冲区会自动移动到线上，此时鼠标所在位置与圆点不同\n    if (lineCirclePair.ball){\n      latLng = lineCirclePair.ball.latLng;\n    }\n    // 开始绘制\n    lineCirclePair.draw(latLng);\n    // 鼠标移动事件注册\n    if (!this.mouseMoveFn){\n      this.mouseMoveFn = this.mapMouseMove.bind(this, lineCirclePair);\n      map.on('mousemove', this.mouseMoveFn, this);\n    }\n  },\n  /**\n   * 鼠标移动事件\n   */\n  mapMouseMove (lineCirclePair, evt) {\n    let latLng = evt.latlng;\n    // 当前鼠标位置如果在线的缓冲区内，自动移动到线上\n    lineCirclePair.autoMoveToLine(latLng);\n  },\n  /**\n   * 取消地图事件，停止绘制线\n   * @param lineCirclePair\n   */\n  mapEventOff () {\n    map.off('click', this.mapClickFn, this);\n    map.off('mousemove', this.mouseMoveFn, this);\n  }\n}\n\n// 圆组合类,继承圆和图形类\nlet CirclePair = L.Class.extend(Animation).extend(Shape).extend(Circles);\n\n// 线组合类,继承线和图形类\nlet LinePair = L.Class.extend(Animation).extend(Shape).extend(Lines);\n\n// 三角形类\nlet Triangle = L.Class.extend(Triangles);\n\n// 线、圆、三角形组合类\nlet LineCirclePair = L.Class.extend(LineCircles);\n\n// 标线集合类\nlet PolyLine = L.Class.extend(LinesSet);\n\nexport default {\n  PolyLine:PolyLine\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/Nav/DrawLine/DrawLine.js"],"sourceRoot":""}